#include <behaviors.dtsi>
#include <behaviors/num_word.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#include "zmk-helpers/helper.h"

/*
 ╭────────────────────────────┬────────────────────────────╮
 │  0   1   2   3   4   5   6 │  7   8   9  10  11  12  13 │
 │ 14  15  16  17  18  19  20 │ 21  22  23  24  25  26  27 │
 │ 28  29  30  31  32  33  34 │ 39  40  41  42  43  44  45 │
 │ 46  47  48  49  50  51 ╭───┴───╮ 54  55  56  57  58  59 │
 │ 60  61  62  63  64╭────╯       ╰────╮71  72  73  74  75 │
 ╰───────────────────┼────────┬────────┼───────────────────╯
                 ╭───╯ 35  36 │ 37  38 ╰───╮
                 │         52 │ 53         │
                 │ 65  66  67 │ 68  69  70 │
                 ╰────────────┴────────────╯
*/
#define KEYS_LEFT 0 1 2 3 4 5 6 \
                  14 15 16 17 18 19 20 \
                  28 29 30 31 32 33 34 \
                  46 47 48 49 50 51 \
                  60 61 62 63 64

#define KEYS_RIGHT 7 8 9 10 11 12 13 \
                   21 22 23 24 25 26 27 \
                   39 40 41 42 43 44 45 \
                   54 55 56 57 58 59 \
                   71 72 73 74 75

#define THUMBS_LEFT 35 36 52 65 66 67

#define THUMBS_RIGHT 37 38 53 68 69 70

#define DEFAULT 0
#define NUMBERS 1


/* Global Settings */

#define QUICK_TAP_MS 175

&sk { // Sticky Key
	release-after-ms = <900>; // Release after 0.9s
	quick-release;            // No double capitalization when rolling keys
};

&sl { // Sticky Layer
	ignore-modifiers; // Allow chording sticky mods & layers
};

&lt { // Layer-Tap
	flavor = "balanced";
	tapping-term-ms = <200>;
	quick-tap-ms = <QUICK_TAP_MS>;
};


/* Combos */

#define COMBO_TERM_FAST 18
#define COMBO_TERM_SLOW 30

#define COMBO_IDLE_FAST 150
#define COMBO_IDLE_SLOW 50

// Make homerow combos tap-only (so HRMs can be chorded instantaneously)
#define HRC_TAB    &hml         LS(LALT) TAB
#define HRC_REPEAT &hml_repeat  LS(LCTRL) 0
#define HRC_LPAR   &hmr_lpar_lt RS(LCTRL) 0
#define HRC_RPAR   &hmr_rpar_gt RS(LALT) 0

// Horizontal Combos - Right Hand
ZMK_COMBO(command_space, &kp LG(SPACE), 41 42 43, ALL, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(return, &kp RETURN, 42 43, ALL, COMBO_TERM_FAST, COMBO_IDLE_FAST)


/* Homerow Mods */

#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS) \
    ZMK_HOLD_TAP(NAME, \
        flavor = "balanced"; \
        tapping-term-ms = <280>; \
        quick-tap-ms = <QUICK_TAP_MS>; \
        require-prior-idle-ms = <150>; \
        bindings = <HOLD>, <TAP>; \
        hold-trigger-key-positions = <TRIGGER_POS>; \
        hold-trigger-on-release; \
    )
MAKE_HRM(hml, &kp, &kp, KEYS_RIGHT THUMBS_LEFT THUMBS_RIGHT) // Left-hand HRMs
MAKE_HRM(hmr, &kp, &kp, KEYS_LEFT THUMBS_LEFT THUMBS_RIGHT) // Right-hand HRMs


/* Smart Shift */

// Tap: sticky shift | Double-tap: caps-word | Hold: shift
ZMK_HOLD_TAP(smart_shift,
	flavor = "balanced";
	tapping-term-ms = <200>;
	quick-tap-ms = <QUICK_TAP_MS>;
	bindings = <&kp>, <&shift_dance>;
)
ZMK_TAP_DANCE(shift_dance,
    tapping-term-ms = <200>;
	bindings = <&sk LEFT_SHIFT>, <&caps_word>;
)
&caps_word {
	/delete-property/ ignore-modifiers;
};

/* Smart Number */

ZMK_HOLD_TAP(smart_number,
	flavor = "balanced";
	tapping-term-ms = <200>;
	quick-tap-ms = <QUICK_TAP_MS>;
	bindings = <&mo>, <&num_dance>;
)
ZMK_TAP_DANCE(num_dance,
	tapping-term-ms = <200>;
	bindings = <&num_word NUMBERS>, <&sl NUMBERS>;
)
&num_word {};