#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&lt {
    tapping-term-ms = <150>;
};

&mt {
    tapping-term-ms = <150>;
};

/ {
    behaviors {
        #include "macros.dtsi"

        lht: layer_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_HOLD_TAP";
            bindings = <&mo>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TILDE     &kp EXCLAMATION  &kp AT_SIGN            &kp HASH          &kp DOLLAR        &kp PERCENT  &tog 2                                                                                         &mo 4                   &kp CARET  &kp AMPERSAND  &kp ASTERISK      &kp PIPE              &kp BACKSLASH   &kp GRAVE
&kp TAB       &kp Q            &kp W                  &kp E             &kp R             &kp T        &kp LS(LA(LC(LG(F3))))                                                                         &kp LS(LA(LC(LG(F4))))  &kp Y      &kp U          &kp I             &kp O                 &kp P           &kp EQUAL
&lt 3 ESCAPE  &kp A            &kp S                  &kp D             &kp F             &kp G        &kp LS(LA(LC(LG(F1))))  &kp LEFT_ALT   &kp LEFT_CONTROL      &kp RIGHT_CONTROL  &kp RIGHT_ALT  &kp LS(LA(LC(LG(F2))))  &kp H      &kp J          &kp K             &kp L                 &kp COLON       &lt 3 DOUBLE_QUOTES
&lht 2 2      &kp Z            &kp X                  &kp C             &kp V             &kp B                                               &kp HOME              &kp PG_UP                                                 &kp N      &kp M          &kp COMMA         &kp DOT               &kp FSLH        &kp MINUS
&mo 3         &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp GREATER_THAN               &mt LEFT_COMMAND ENTER  &kp BACKSPACE  &kp END               &kp PG_DN          &caps_word     &lt 1 SPACE                        &kp LESS_THAN  &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp LEFT_BRACE  &mo 3
            >;
        };

        shift {
            bindings = <
&trans  &trans     &trans     &trans     &trans     &trans     &trans                                      &trans  &trans     &trans     &trans     &trans     &trans         &trans
&trans  &kp RS(Q)  &kp RS(W)  &kp RS(E)  &kp RS(R)  &kp RS(T)  &trans                                      &trans  &kp LS(Y)  &kp LS(U)  &kp LS(I)  &kp LS(O)  &kp LS(P)      &trans
&trans  &kp RS(A)  &kp RS(S)  &kp RS(D)  &kp RS(F)  &kp RS(G)  &trans  &trans  &trans      &trans  &trans  &trans  &kp LS(H)  &kp LS(J)  &kp LS(K)  &kp LS(L)  &kp SEMICOLON  &kp SINGLE_QUOTE
&trans  &kp RS(Z)  &kp RS(X)  &kp RS(C)  &kp RS(V)  &kp RS(B)                  &trans      &trans                  &kp LS(N)  &kp LS(M)  &trans     &trans     &trans         &trans
&trans  &trans     &trans     &trans     &trans                &trans  &trans  &trans      &trans  &trans  &trans             &trans     &trans     &trans     &trans         &trans
            >;
        };

        keypad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans     &kp KP_MULTIPLY  &trans      &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &kp KP_N7  &kp KP_N8        &kp KP_N9   &kp KP_MINUS  &kp KP_EQUAL
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &kp KP_N4  &kp KP_N5        &kp KP_N6   &kp KP_PLUS   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &kp KP_N1  &kp KP_N2        &kp KP_N3   &kp KP_SLASH  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &kp KP_N0  &kp KP_COMMA     &kp KP_DOT  &trans        &trans
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2                     &kp F3                     &kp F4                  &kp F5                  &kp F6                  &tog 2                                                      &mo 4   &kp F7          &kp F8          &kp F9        &kp F10          &kp F11  &kp F12
&trans  &kp LS(LA(LC(LG(EQUAL))))  &kp LS(LA(LC(LG(MINUS))))  &trans                  &trans                  &trans                  &none                                                       &none   &trans          &trans          &trans        &trans           &trans   &trans
&trans  &kp LS(LA(LC(LG(N1))))     &kp LS(LA(LC(LG(N2))))     &kp LS(LA(LC(LG(N3))))  &kp LS(LA(LC(LG(N4))))  &kp LS(LA(LC(LG(N5))))  &kp LS(LA(LC(LG(N6))))  &trans  &trans      &trans  &trans  &none   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans   &trans
&trans  &kp LS(LA(LC(LG(N7))))     &kp LS(LA(LC(LG(N8))))     &kp LS(LA(LC(LG(N9))))  &kp LS(LA(LC(LG(N0))))  &trans                                                  &trans      &trans                  &trans          &trans          &trans        &trans           &trans   &trans
&trans  &trans                     &trans                     &trans                  &trans                                          &trans                  &trans  &trans      &trans  &trans  &trans                  &trans          &trans        &trans           &trans   &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
